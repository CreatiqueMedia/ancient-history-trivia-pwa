#!/bin/bash

echo "üßπ INTELLIGENT PROJECT CLEANUP"
echo "=============================="
echo ""

# Create backup directory for safety
mkdir -p .cleanup-backup

# Function to safely remove file with backup
safe_remove() {
    local file="$1"
    local reason="$2"
    if [ -f "$file" ] || [ -d "$file" ]; then
        echo "üóëÔ∏è  Removing: $file ($reason)"
        mv "$file" .cleanup-backup/ 2>/dev/null || echo "   ‚ö†Ô∏è  Could not move $file"
    else
        echo "   ‚è≠Ô∏è  Already gone: $file"
    fi
}

echo "Phase 1: Test Files & Debug Files"
echo "---------------------------------"
safe_remove "lighthouse-test.mjs" "lighthouse testing script"
safe_remove "payment-test.html" "payment testing file"
safe_remove "public/debug-daily.html" "debug HTML file"
safe_remove "public/debug.html" "debug HTML file"
safe_remove "scripts/quick-test-payment-links.sh" "test script"
safe_remove "test-analytics.ts" "analytics test file"
safe_remove "test-daily-challenge.js" "daily challenge test"
safe_remove "test-daily-challenge.mjs" "daily challenge test"
safe_remove "test-react.js" "React test file"
safe_remove "test-results.json" "test results"
safe_remove "tests/" "test directory"
safe_remove "vitest.config.ts" "Vitest config - using npm test scripts instead"

echo ""
echo "Phase 2: Unused Source Components"
echo "--------------------------------"
safe_remove "src/components/EyeOfRa.tsx" "unused component"
safe_remove "src/screens/AchievementsScreenNew.tsx" "unused screen"
safe_remove "src/screens/SubscriptionScreen.tsx" "unused screen"

echo ""
echo "Phase 3: Backup Files & Configs"
echo "------------------------------"
safe_remove "src/config/firebase-clean.ts" "backup firebase config"
safe_remove "src/config/firebase.development.ts" "development-specific config"
safe_remove "src/config/live-payment-links.ts" "unused payment config"
safe_remove "src/config/live-payment-links.ts.backup" "backup file"
safe_remove "src/data/bundles-backup.ts" "backup data file"
safe_remove "src/utils/firestoreWrapper.ts" "unused utility"

echo ""
echo "Phase 4: Environment & Config Examples"
echo "------------------------------------"
safe_remove ".env.example" "example env file"
safe_remove ".env.production.example" "example env file"
safe_remove ".env.supabase.example" "example env file"
safe_remove ".env.template" "template env file"

echo ""
echo "Phase 5: GitHub Template Files"
echo "-----------------------------"
safe_remove ".github/PULL_REQUEST_TEMPLATE/" "PR template directory"
safe_remove ".github/workflows/template-health.yml" "template workflow"

echo ""
echo "Phase 6: Redundant Documentation"
echo "-------------------------------"
safe_remove "docs/COMPREHENSIVE_PROJECT_DOCUMENTATION.md" "overly verbose docs"
safe_remove "docs/MILESTONE_BACKUP_README.md" "backup docs"
safe_remove "docs/MILESTONE_WORKING_STATE.md" "milestone docs"
safe_remove "docs/TEMPLATE_README.md" "template docs"
safe_remove "docs/TESTING_GUIDE.md" "redundant testing info"
safe_remove "docs/GETTING_STARTED.md" "template-specific getting started"

echo ""
echo "üìã KEEPING USEFUL DOCS:"
echo "   ‚Ä¢ CONTRIBUTING.md (development guidelines)"
echo "   ‚Ä¢ SECURITY.md (security policy)"
echo "   ‚Ä¢ REFERENCES.md (external references)"
echo "   ‚Ä¢ MARKETING_STRATEGY.md (business strategy)"
echo "   ‚Ä¢ ZERO-COST-MARKETING-STRATEGY.md (marketing tactics)"

echo ""
echo "Phase 7: BFG Cleanup Artifacts"
echo "-----------------------------"
safe_remove "..bfg-report/" "git history cleanup artifacts"

echo ""
echo "Phase 8: Service Tests"
echo "--------------------"
safe_remove "src/services/__tests__/" "service test directory"

echo ""
echo "‚úÖ CLEANUP COMPLETE!"
echo ""
echo "üìä Summary:"
echo "   ‚Ä¢ Test files and debug artifacts removed"
echo "   ‚Ä¢ Unused components and screens removed"
echo "   ‚Ä¢ Backup and example files removed"
echo "   ‚Ä¢ Redundant documentation removed"
echo "   ‚Ä¢ All removed files backed up to .cleanup-backup/"
echo ""
echo "üîß CRITICAL FILES PRESERVED:"
echo "   ‚Ä¢ src/types/global.d.ts (gtag, Sentry, PWA types)"
echo "   ‚Ä¢ src/types/stripe.d.ts (Stripe API extensions)"
echo "   ‚Ä¢ src/vite-env.d.ts (Vite environment types)"
echo "   ‚Ä¢ All production source code and components"
echo "   ‚Ä¢ Essential documentation in docs/"
echo ""
echo "üìö PRESERVED DOCUMENTATION:"
echo "   ‚Ä¢ README.md (main project documentation)"
echo "   ‚Ä¢ docs/CONTRIBUTING.md (development guidelines)"
echo "   ‚Ä¢ docs/SECURITY.md (security policy)"
echo "   ‚Ä¢ docs/REFERENCES.md (external references)"
echo "   ‚Ä¢ docs/MARKETING_STRATEGY.md (business strategy)"
echo "   ‚Ä¢ docs/ZERO-COST-MARKETING-STRATEGY.md (marketing tactics)"
echo ""
echo "üöÄ Project is now production-ready!"
