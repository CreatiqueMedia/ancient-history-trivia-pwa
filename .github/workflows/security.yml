name: Security Audit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security audit daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run security audit
        run: |
          echo "Running security audit..."
          
          # Run yarn audit and capture both output and exit code
          set +e  # Don't exit on command failure
          yarn audit --level high --json > audit-results.json 2>&1
          AUDIT_EXIT_CODE=$?
          set -e  # Re-enable exit on error
          
          echo "Audit exit code: $AUDIT_EXIT_CODE"
          
          # If audit-results.json exists, analyze it
          if [ -f audit-results.json ] && [ -s audit-results.json ]; then
            echo "Audit results found, analyzing..."
            
            # Check for high or critical vulnerabilities in JSON output
            HIGH_CRITICAL_COUNT=$(cat audit-results.json | jq -r '.data.vulnerabilities.high + .data.vulnerabilities.critical' 2>/dev/null || echo "0")
            
            if [ "$HIGH_CRITICAL_COUNT" != "null" ] && [ "$HIGH_CRITICAL_COUNT" -gt 0 ]; then
              echo "‚ùå Found $HIGH_CRITICAL_COUNT high/critical vulnerabilities!"
              echo "Audit results:"
              cat audit-results.json
              exit 1
            else
              echo "‚úÖ No high or critical vulnerabilities found"
            fi
          else
            # If no JSON output, run regular audit for human-readable output
            echo "Running human-readable audit..."
            yarn audit --level high
          fi
          
          echo "üîí Security audit passed!"

      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: audit-results.json
