name: Security Audit

# Force refresh - Updated to use yarn audit exclusively
# No npm commands should be used in this workflow

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security audit daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Verify package manager
        run: |
          echo "üîç Verifying we're using Yarn (not npm)..."
          which yarn
          yarn --version
          echo "üì¶ Package manager verification complete"

      - name: Run security audit
        run: |
          echo "üîç Running Yarn security audit (NOT npm audit)..."
          echo "‚ö†Ô∏è  This workflow uses YARN ONLY - no npm commands"
          
          # Verify we're using yarn
          echo "üìã Yarn version: $(yarn --version)"
          
          # Run yarn audit and capture JSON output
          echo "üìä Getting audit summary in JSON format..."
          yarn audit --json > audit-full.json || true
          
          # Parse the JSON to extract vulnerability counts
          if [ -f audit-full.json ]; then
            echo "üìã Audit results found, parsing JSON..."
            
            # Extract vulnerability counts from JSON
            HIGH_COUNT=$(cat audit-full.json | grep '"type":"auditSummary"' | sed 's/.*"high":\([0-9]*\).*/\1/' || echo "0")
            CRITICAL_COUNT=$(cat audit-full.json | grep '"type":"auditSummary"' | sed 's/.*"critical":\([0-9]*\).*/\1/' || echo "0")
            MODERATE_COUNT=$(cat audit-full.json | grep '"type":"auditSummary"' | sed 's/.*"moderate":\([0-9]*\).*/\1/' || echo "0")
            LOW_COUNT=$(cat audit-full.json | grep '"type":"auditSummary"' | sed 's/.*"low":\([0-9]*\).*/\1/' || echo "0")
            
            echo "üî¢ Vulnerability counts:"
            echo "  Critical: $CRITICAL_COUNT"
            echo "  High: $HIGH_COUNT"
            echo "  Moderate: $MODERATE_COUNT"
            echo "  Low: $LOW_COUNT"
            
            # Only fail if we have high or critical vulnerabilities
            if [ "$HIGH_COUNT" -gt 0 ] || [ "$CRITICAL_COUNT" -gt 0 ]; then
              echo "‚ùå High or critical vulnerabilities found!"
              echo "üìã Full audit output:"
              cat audit-full.json
              echo ""
              echo "üîç Detailed audit report:"
              yarn audit --level high || true
              exit 1
            else
              echo "‚úÖ No high or critical vulnerabilities found!"
              if [ "$MODERATE_COUNT" -gt 0 ] || [ "$LOW_COUNT" -gt 0 ]; then
                echo "‚ÑπÔ∏è  Found $MODERATE_COUNT moderate and $LOW_COUNT low vulnerabilities (acceptable)"
              fi
              echo "üîí Build will continue"
            fi
          else
            echo "‚ö†Ô∏è No audit results file found, running fallback audit..."
            yarn audit --level high || {
              echo "‚ùå Audit command failed unexpectedly"
              exit 1
            }
          fi
          
          echo "üéâ Security audit completed successfully!"

      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: yarn-security-audit-results
          path: |
            audit-full.json
# Test comment to force workflow refresh
